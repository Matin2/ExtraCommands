plugins {
    id 'java'
}

group = 'me.matin'
description = 'ExtraCommands'
version = '3.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype-repo"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "ProtocolLib"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "oraxen-repo"
        url = "https://repo.oraxen.com/releases"
    }
    maven {
        name = "Lumine Repo"
        url = "https://mvn.lumine.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly(fileTree("libs"))
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    compileOnly "io.th0rgal:oraxen:1.165.0"
    compileOnly "com.comphenix.protocol:ProtocolLib:5.1.0"
    compileOnly "de.tr7zw:item-nbt-api-plugin:2.12.2"
    compileOnly "io.lumine:Mythic-Dist:5.4.0-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.jar {
    archiveFileName.set("${project.name}.jar")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
